PREHOOK: query: -- HIVE-18258

create table demo (one int, two int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@demo
POSTHOOK: query: -- HIVE-18258

create table demo (one int, two int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@demo
PREHOOK: query: insert into table demo values (1, 2)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@demo
POSTHOOK: query: insert into table demo values (1, 2)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@demo
POSTHOOK: Lineage: demo.one EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: demo.two EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
_col0	_col1
PREHOOK: query: explain
select one as one_0, two, one as one_1
from demo a
join (select 1 as one, 2 as two) b
on a.one = b.one and a.two = b.two
group by a.one, a.two, a.one
PREHOOK: type: QUERY
POSTHOOK: query: explain
select one as one_0, two, one as one_1
from demo a
join (select 1 as one, 2 as two) b
on a.one = b.one and a.two = b.two
group by a.one, a.two, a.one
POSTHOOK: type: QUERY
Explain
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Map 2 <- Map 1 (BROADCAST_EDGE)
        Reducer 3 <- Map 2 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: _dummy_table
                  Row Limit Per Split: 1
                  Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: 1 (type: int), 2 (type: int)
                    sort order: ++
                    Map-reduce partition columns: 1 (type: int), 2 (type: int)
                    Statistics: Num rows: 1 Data size: 1 Basic stats: COMPLETE Column stats: COMPLETE
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (one is not null and two is not null) (type: boolean)
                    Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      keys:
                        0 one (type: int), two (type: int)
                        1 1 (type: int), 2 (type: int)
                      outputColumnNames: _col0, _col1
                      input vertices:
                        1 Map 1
                      Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                      HybridGraceHashJoin: true
                      Group By Operator
                        keys: _col0 (type: int), _col1 (type: int)
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: int), _col1 (type: int)
                          sort order: ++
                          Map-reduce partition columns: _col0 (type: int), _col1 (type: int)
                          Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col0 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col2 (type: int), _col1 (type: int), _col2 (type: int)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 3 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select one as one_0, two, one as one_1
from demo a
join (select 1 as one, 2 as two) b
on a.one = b.one and a.two = b.two
group by a.one, a.two, a.one
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Input: default@demo
#### A masked pattern was here ####
POSTHOOK: query: select one as one_0, two, one as one_1
from demo a
join (select 1 as one, 2 as two) b
on a.one = b.one and a.two = b.two
group by a.one, a.two, a.one
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Input: default@demo
#### A masked pattern was here ####
one_0	two	one_1
1	2	1
